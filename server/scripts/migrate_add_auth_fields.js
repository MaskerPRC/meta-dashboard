const sqlite3 = require('sqlite3').verbose();
const path = require('path');

// Êï∞ÊçÆÂ∫ìÊñá‰ª∂Ë∑ØÂæÑ
const dbPath = path.join(__dirname, '../data/ai_dashboard.db');

// Ê£ÄÊü•ÂΩìÂâçÂ∑•‰ΩúÁõÆÂΩïÊòØÂê¶ÊòØËÑöÊú¨ÁõÆÂΩï
if (process.argv[1] === __filename) {
  runMigration();
}

function runMigration() {
  console.log('üîÑ ÂºÄÂßãÊï∞ÊçÆÂ∫ìËøÅÁßªÔºöÊ∑ªÂä†ÂæÆ‰ø°ÂíåÊú¨Âú∞ËÆ§ËØÅÂ≠óÊÆµ...');
  
  // ÂÖàÂ§á‰ªΩÊï∞ÊçÆÂ∫ì
  const backupPath = path.join(__dirname, '../data', `ai_dashboard_backup_migration_${new Date().toISOString().replace(/[:.]/g, '-')}.db`);
  const fs = require('fs');
  
  try {
    fs.copyFileSync(dbPath, backupPath);
    console.log(`‚úÖ Êï∞ÊçÆÂ∫ìÂ§á‰ªΩÊàêÂäü: ${backupPath}`);
  } catch (err) {
    console.error('‚ùå Êï∞ÊçÆÂ∫ìÂ§á‰ªΩÂ§±Ë¥•:', err);
    process.exit(1);
  }
  
  const db = new sqlite3.Database(dbPath, (err) => {
    if (err) {
      console.error('‚ùå Êï∞ÊçÆÂ∫ìËøûÊé•Â§±Ë¥•:', err.message);
      process.exit(1);
    }
    
    console.log('‚úÖ Êï∞ÊçÆÂ∫ìËøûÊé•ÊàêÂäü');
    
    // Ëé∑ÂèñÂΩìÂâçusersË°®ÁªìÊûÑ
    db.all("PRAGMA table_info(users)", (err, columns) => {
      if (err) {
        console.error('‚ùå Ëé∑ÂèñË°®ÁªìÊûÑÂ§±Ë¥•:', err);
        db.close();
        process.exit(1);
      }
      
      const existingColumns = columns.map(col => col.name);
      console.log('üìä ÂΩìÂâçusersË°®Â≠óÊÆµ:', existingColumns);
      
      // ÈúÄË¶ÅÊ∑ªÂä†ÁöÑÂ≠óÊÆµ
      const fieldsToAdd = [
        {
          name: 'wechat_id',
          sql: 'ALTER TABLE users ADD COLUMN wechat_id TEXT',
          description: 'ÂæÆ‰ø°Áî®Êà∑ID'
        },
        {
          name: 'wechat_unionid', 
          sql: 'ALTER TABLE users ADD COLUMN wechat_unionid TEXT',
          description: 'ÂæÆ‰ø°unionid'
        },
        {
          name: 'password_hash',
          sql: 'ALTER TABLE users ADD COLUMN password_hash TEXT',
          description: 'ÂØÜÁ†ÅÂìàÂ∏å'
        },
        {
          name: 'salt',
          sql: 'ALTER TABLE users ADD COLUMN salt TEXT',
          description: 'ÂØÜÁ†ÅÁõêÂÄº'
        },
        {
          name: 'phone',
          sql: 'ALTER TABLE users ADD COLUMN phone TEXT',
          description: 'ÊâãÊú∫Âè∑'
        },
        {
          name: 'last_login',
          sql: 'ALTER TABLE users ADD COLUMN last_login DATETIME',
          description: 'ÊúÄÂêéÁôªÂΩïÊó∂Èó¥'
        }
      ];
      
      // Ê£ÄÊü•Âπ∂Ê∑ªÂä†Â≠óÊÆµ
      let addedCount = 0;
      let skippedCount = 0;
      
      const processNextField = (index) => {
        if (index >= fieldsToAdd.length) {
          console.log(`üéâ Êï∞ÊçÆÂ∫ìËøÅÁßªÂÆåÊàêÔºÅÊ∑ªÂä†‰∫Ü ${addedCount} ‰∏™Â≠óÊÆµÔºåË∑≥Ëøá‰∫Ü ${skippedCount} ‰∏™Â∑≤Â≠òÂú®ÁöÑÂ≠óÊÆµ`);
          db.close();
          return;
        }
        
        const field = fieldsToAdd[index];
        
        if (existingColumns.includes(field.name)) {
          console.log(`‚ö†Ô∏è  Â≠óÊÆµ ${field.name} Â∑≤Â≠òÂú®ÔºåË∑≥Ëøá`);
          skippedCount++;
          processNextField(index + 1);
          return;
        }
        
        db.run(field.sql, (err) => {
          if (err) {
            console.error(`‚ùå Ê∑ªÂä†Â≠óÊÆµ ${field.name} Â§±Ë¥•:`, err);
            db.close();
            process.exit(1);
          }
          
          console.log(`‚úÖ Ê∑ªÂä†Â≠óÊÆµ: ${field.name} (${field.description})`);
          addedCount++;
          processNextField(index + 1);
        });
      };
      
      processNextField(0);
    });
  });
}

module.exports = { runMigration }; 